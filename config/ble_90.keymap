
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>
 
/ { 
		keymap {
			compatible = "zmk,keymap";
			default_layer {
				bindings = <
		&kp ESC &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12 &kp DEL &kp KP_N7 &kp KP_N8 &kp KP_N9
		&kp GRAVE &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &kp MINUS &kp EQUAL &kp BSPC &kp KP_N4 &kp KP_N5 &kp KP_N6 
		&kp TAB &kp Q &kp W &kp E &kp R &kp T &kp Y &kp U &kp I &kp O &kp P &kp LBKT &kp RBKT &kp BSLH &kp KP_N1 &kp KP_N2 &kp KP_N3
		&kp CAPS &kp A &kp S &kp D &kp F &kp G &kp H &kp J &kp K &kp L &kp SEMI &kp SQT &kp RET &kp KP_N0 &lt 1 KP_DOT
		&kp LSHIFT &kp Z &kp X &kp C &kp V &kp B &kp N &kp M &kp COMMA &kp DOT &kp FSLH &kp RSHIFT &kp UP
		&kp LCTRL &kp LGUI &kp LALT &kp SPACE &kp RALT &kp RGUI &mo 1 &kp RCTRL &kp LEFT &kp DOWN &kp RIGHT 
				>;
			};
			lower_layer {
				bindings = <
		&bootloader &rgb_ug RGB_BRD &rgb_ug RGB_BRI &rgb_ug RGB_HUD &rgb_ug RGB_HUI &rgb_ug RGB_SAD &rgb_ug RGB_SAI &rgb_ug RGB_SPD &rgb_ug RGB_SPI &trans &trans &trans &trans &kp PSCRN &trans &trans &trans
		&bt BT_CLR &bt BT_SEL 0 &bt BT_NXT &trans &trans &trans &trans &trans &trans &trans &trans &kp C_VOL_DN &kp C_VOL_UP &trans &trans &trans &trans 
		&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &kp C_BRI_DN &kp C_BRI_UP &trans &trans &trans &trans 
		&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &rgb_ug RGB_EFF &kp KP_NLCK &trans 
		&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &to 2 &kp PG_UP 
		&trans &trans &trans &rgb_ug RGB_TOG &out OUT_USB &out OUT_BLE &trans &kp INS &kp HOME &kp PG_DN &kp END
				>;
			};
			upper_layer {
				bindings = <
		&kp ESC &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12 &kp DEL &kp KP_N7 &kp KP_N8 &kp KP_N9
		&mt LS(GRAVE) GRAVE &mt LS(N1) N1 &mt LS(N2) N2 &mt LS(N3) N3 &mt LS(N4) N4 &mt LS(N5) N5 &mt LS(N6) N6 &mt LS(N7) N7 &mt LS(N8) N8 &mt LS(N9) N9 &mt LS(N0) N0 &mt LS(MINUS) MINUS &mt LS(EQUAL) EQUAL &kp BSPC &kp KP_N4 &kp KP_N5 &kp KP_N6 
		&kp TAB &mt LS(Q) Q &mt LS(W) W &mt LS(E) E &mt LS(R) R &mt LS(T) T &mt LS(Y) Y &mt LS(U) U &mt LS(I) I &mt LS(O) O &mt LS(P) P &mt LS(LBKT) LBKT &mt LS(RBKT) RBKT &mt LS(BSLH) BSLH &kp KP_N1 &kp KP_N2 &kp KP_N3
		&kp CAPS &mt LS(A) A &mt LS(S) S &mt LS(D) D &mt LS(F) F &mt LS(G) G &mt LS(H) H &mt LS(J) J &mt LS(K) K &mt LS(L) L &mt LS(SEMI) SEMI &mt LS(SQT) SQT &kp RET &kp KP_N0 &lt 1 KP_DOT
		&kp LSHIFT &mt LS(Z) Z &mt LS(X) X &mt LS(C) C &mt LS(V) V &mt LS(B) B &mt LS(N) N &mt LS(M) M &mt LS(COMMA) COMMA &mt LS(DOT) DOT &mt LS(FSLH) FSLH &to 0 &kp UP
		&kp LCTRL &kp LGUI &kp LALT &kp SPACE &kp RALT &kp RGUI &mo 1 &kp RCTRL &kp LEFT &kp DOWN &kp RIGHT
				>;
			};
		};
};
